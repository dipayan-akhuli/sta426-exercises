library(matrixStats)
library(ROCR)
# Chunk 3
nGenes <- 10000                   # number of "features"
nSamples <- 6                     # number of samples (split equal in 2 groups)
pDiff <- .1                       # proportion of genes "differential"
grp <- rep(0:1, each=nSamples/2)  # dummy variable for exp. group
trueFC <- 2                       # log-fold-change of truly DE
d0 <- 1
s0 <- 0.8
sd <- s0 * sqrt(d0/rchisq(nGenes, df=d0))  # dist'n of s.d.
# Chunk 4
y <- matrix(rnorm(nGenes*nSamples, sd=sd), nr=nGenes, nc=nSamples)
# Chunk 5
indD <- 1:floor(pDiff*nGenes)
diff <- sample(c(-1,1), max(indD), replace=TRUE) * trueFC
y[indD, grp==1] <- y[indD, grp==1] + diff
# Chunk 6
# calculate true and observed variances
varTrue <- sd^2
varObs <- (rowSums((y[,grp==0] - rowMeans(y[,grp==0]))^2) + rowSums((y[,grp==1] - rowMeans(y[,grp==1]))^2)) / (nSamples-2)
cols <- rep("Non-differential", nGenes)
cols[indD] <- "Differential"
dfVars <- data.frame(varTrue=varTrue, varObs=varObs, Status=cols)
# Chunk 7: scatter-var
#| label: scatter-var
ggplot(dfVars, aes(x=varTrue, y=varObs, color=Status)) +
geom_point(shape=21, alpha=0.3) +
labs(x="True variance", y="Observed variance") +
scale_x_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
scale_y_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
geom_abline(slope=1, intercept=0, color="black", linewidth=0.3) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square")) +
coord_equal()
# Chunk 8
# calculate mean differences between experimental and control groups
dfVisDE <- data.frame(cbind(rowMeans(y[,grp==1]) - rowMeans(y[,grp==0]), cols))
colnames(dfVisDE) = c("diff", "Status")
# Chunk 9: diff-DE
#| label: diff-DE
ggplot(dfVisDE, aes(x=diff, color=Status)) +
geom_density() +
xlim(c(-10,10)) +
labs(x="log-fold-change b/w exp. and ctrl. groups", y="Density") +
theme_bw() +
theme(
axis.title.x=element_text(vjust=-1),
axis.title.y=element_text(vjust=+3),
panel.border=element_blank(),
axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
View(dfVisDE)
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(limma)
library(ggplot2)
library(scales)
library(matrixStats)
library(ROCR)
# Chunk 3
nGenes <- 10000                   # number of "features"
nSamples <- 6                     # number of samples (split equal in 2 groups)
pDiff <- .1                       # proportion of genes "differential"
grp <- rep(0:1, each=nSamples/2)  # dummy variable for exp. group
trueFC <- 2                       # log-fold-change of truly DE
d0 <- 1
s0 <- 0.8
sd <- s0 * sqrt(d0/rchisq(nGenes, df=d0))  # dist'n of s.d.
# Chunk 4
y <- matrix(rnorm(nGenes*nSamples, sd=sd), nr=nGenes, nc=nSamples)
# Chunk 5
indD <- 1:floor(pDiff*nGenes)
diff <- sample(c(-1,1), max(indD), replace=TRUE) * trueFC
y[indD, grp==1] <- y[indD, grp==1] + diff
# Chunk 6
# calculate true and observed variances
varTrue <- sd^2
varObs <- (rowSums((y[,grp==0] - rowMeans(y[,grp==0]))^2) + rowSums((y[,grp==1] - rowMeans(y[,grp==1]))^2)) / (nSamples-2)
cols <- rep("Non-differential", nGenes)
cols[indD] <- "Differential"
dfVars <- data.frame(varTrue=varTrue, varObs=varObs, Status=cols)
# Chunk 7: scatter-var
#| label: scatter-var
ggplot(dfVars, aes(x=varTrue, y=varObs, color=Status)) +
geom_point(shape=21, alpha=0.3) +
labs(x="True variance", y="Observed variance") +
scale_x_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
scale_y_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
geom_abline(slope=1, intercept=0, color="black", linewidth=0.3) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square")) +
coord_equal()
# Chunk 8
# calculate mean differences between experimental and control groups
dfVisDE <- data.frame(cbind(rowMeans(y[,grp==1]) - rowMeans(y[,grp==0]), cols))
colnames(dfVisDE) = c("diff", "Status")
# Chunk 9: diff-DE
#| label: diff-DE
ggplot(dfVisDE, aes(x=diff, color=Status)) +
geom_density() +
xlim(c(-10,10)) +
labs(x="log-fold-change b/w exp. and ctrl. groups", y="Density") +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
View(dfVars)
#| label: diff-DE
ggplot(dfVisDE, aes(x=diff, color=Status)) +
geom_density() +
labs(x="log-fold-change b/w exp. and ctrl. groups", y="Density") +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(limma)
library(ggplot2)
library(scales)
library(matrixStats)
library(ROCR)
# Chunk 3
nGenes <- 10000                   # number of "features"
nSamples <- 6                     # number of samples (split equal in 2 groups)
pDiff <- .1                       # proportion of genes "differential"
grp <- rep(0:1, each=nSamples/2)  # dummy variable for exp. group
trueFC <- 2                       # log-fold-change of truly DE
d0 <- 1
s0 <- 0.8
sd <- s0 * sqrt(d0/rchisq(nGenes, df=d0))  # dist'n of s.d.
# Chunk 4
y <- matrix(rnorm(nGenes*nSamples, sd=sd), nr=nGenes, nc=nSamples)
# Chunk 5
indD <- 1:floor(pDiff*nGenes)
diff <- sample(c(-1,1), max(indD), replace=TRUE) * trueFC
y[indD, grp==1] <- y[indD, grp==1] + diff
# Chunk 6
# calculate true and observed variances
varTrue <- sd^2
varObs <- (rowSums((y[,grp==0] - rowMeans(y[,grp==0]))^2) + rowSums((y[,grp==1] - rowMeans(y[,grp==1]))^2)) / (nSamples-2)
cols <- rep("Non-differential", nGenes)
cols[indD] <- "Differential"
dfVars <- data.frame(varTrue=varTrue, varObs=varObs, Status=cols)
# Chunk 7: scatter-var
#| label: scatter-var
ggplot(dfVars, aes(x=varTrue, y=varObs, color=Status)) +
geom_point(shape=21, alpha=0.3) +
labs(x="True variance", y="Observed variance") +
scale_x_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
scale_y_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
geom_abline(slope=1, intercept=0, color="black", linewidth=0.3) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square")) +
coord_equal()
# Chunk 8
# calculate mean differences between experimental and control groups
dfVisDE <- data.frame(cbind(rowMeans(y[,grp==1]) - rowMeans(y[,grp==0]), cols))
colnames(dfVisDE) = c("diff", "Status")
# Chunk 9: diff-DE
#| label: diff-DE
ggplot(dfVisDE, aes(x=diff, color=Status)) +
geom_density() +
labs(x="log-fold-change b/w exp. and ctrl. groups", y="Density") +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
knitr::opts_chunk$set(echo = TRUE)
library(limma)
library(ggplot2)
library(scales)
library(matrixStats)
library(ROCR)
nGenes <- 10000                   # number of "features"
nSamples <- 6                     # number of samples (split equal in 2 groups)
pDiff <- .1                       # proportion of genes "differential"
grp <- rep(0:1, each=nSamples/2)  # dummy variable for exp. group
trueFC <- 2                       # log-fold-change of truly DE
d0 <- 1
s0 <- 0.8
sd <- s0 * sqrt(d0/rchisq(nGenes, df=d0))  # dist'n of s.d.
y <- matrix(rnorm(nGenes*nSamples, sd=sd), nr=nGenes, nc=nSamples)
indD <- 1:floor(pDiff*nGenes)
diff <- sample(c(-1,1), max(indD), replace=TRUE) * trueFC
y[indD, grp==1] <- y[indD, grp==1] + diff
# calculate true and observed variances
varTrue <- sd^2
varObs <- (rowSums((y[,grp==0] - rowMeans(y[,grp==0]))^2) + rowSums((y[,grp==1] - rowMeans(y[,grp==1]))^2)) / (nSamples-2)
cols <- rep("Non-differential", nGenes)
cols[indD] <- "Differential"
dfVars <- data.frame(varTrue=varTrue, varObs=varObs, Status=cols)
#| label: scatter-var
ggplot(dfVars, aes(x=varTrue, y=varObs, color=Status)) +
geom_point(shape=21, alpha=0.3) +
labs(x="True variance", y="Observed variance") +
scale_x_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
scale_y_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
geom_abline(slope=1, intercept=0, color="black", linewidth=0.3) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square")) +
coord_equal()
# calculate mean differences between experimental and control groups
dfVisDE <- data.frame(cbind(rowMeans(y[,grp==1]) - rowMeans(y[,grp==0]), cols))
colnames(dfVisDE) = c("diff", "Status")
View(dfVisDE)
#| label: diff-DE
ggplot(dfVisDE, aes(x=diff, color=Status)) +
geom_density() +
labs(x="log-fold-change b/w exp. and ctrl. groups", y="Density") +
xlim(c(-10,10)) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE)
# Chunk 2
library(limma)
library(ggplot2)
library(scales)
library(matrixStats)
library(ROCR)
# Chunk 3
nGenes <- 10000                   # number of "features"
nSamples <- 6                     # number of samples (split equal in 2 groups)
pDiff <- .1                       # proportion of genes "differential"
grp <- rep(0:1, each=nSamples/2)  # dummy variable for exp. group
trueFC <- 2                       # log-fold-change of truly DE
d0 <- 1
s0 <- 0.8
sd <- s0 * sqrt(d0/rchisq(nGenes, df=d0))  # dist'n of s.d.
# Chunk 4
y <- matrix(rnorm(nGenes*nSamples, sd=sd), nr=nGenes, nc=nSamples)
# Chunk 5
indD <- 1:floor(pDiff*nGenes)
diffE <- sample(c(-1,1), max(indD), replace=TRUE) * trueFC
y[indD, grp==1] <- y[indD, grp==1] + diffE
# Chunk 6
# calculate true and observed variances
varTrue <- sd^2
varObs <- (rowSums((y[,grp==0] - rowMeans(y[,grp==0]))^2) + rowSums((y[,grp==1] - rowMeans(y[,grp==1]))^2)) / (nSamples-2)
cols <- rep("Non-differential", nGenes)
cols[indD] <- "Differential"
dfVars <- data.frame(varTrue=varTrue, varObs=varObs, Status=cols)
# Chunk 7: scatter-var
#| label: scatter-var
ggplot(dfVars, aes(x=varTrue, y=varObs, color=Status)) +
geom_point(shape=21, alpha=0.3) +
labs(x="True variance", y="Observed variance") +
scale_x_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
scale_y_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
geom_abline(slope=1, intercept=0, color="black", linewidth=0.3) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square")) +
coord_equal()
# Chunk 8
# calculate mean differences between experimental and control groups
dfVisDE <- data.frame(cbind(rowMeans(y[,grp==1]) - rowMeans(y[,grp==0]), cols))
colnames(dfVisDE) = c("diff", "Status")
# Chunk 9: diff-DE
#| label: diff-DE
ggplot(dfVisDE, aes(x=diff, color=Status)) +
geom_density() +
labs(x="log-fold-change b/w exp. and ctrl. groups", y="Density") +
xlim(c(-10,10)) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
View(dfVisDE)
knitr::opts_chunk$set(echo = TRUE)
library(limma)
library(ggplot2)
library(scales)
library(matrixStats)
library(ROCR)
nGenes <- 10000                   # number of "features"
nSamples <- 6                     # number of samples (split equal in 2 groups)
pDiff <- .1                       # proportion of genes "differential"
grp <- rep(0:1, each=nSamples/2)  # dummy variable for exp. group
trueFC <- 2                       # log-fold-change of truly DE
d0 <- 1
s0 <- 0.8
sd <- s0 * sqrt(d0/rchisq(nGenes, df=d0))  # dist'n of s.d.
y <- matrix(rnorm(nGenes*nSamples, sd=sd), nr=nGenes, nc=nSamples)
indD <- 1:floor(pDiff*nGenes)
diffE <- sample(c(-1,1), max(indD), replace=TRUE) * trueFC
y[indD, grp==1] <- y[indD, grp==1] + diffE
# calculate true and observed variances
cols <- rep("Non-differential", nGenes)
cols[indD] <- "Differential"
dfVars <- data.frame(varTrue=sd^2, varObs=(rowSums((y[,grp==0] - rowMeans(y[,grp==0]))^2) + rowSums((y[,grp==1] - rowMeans(y[,grp==1]))^2)) / (nSamples-2), Status=cols)
knitr::opts_chunk$set(echo = TRUE)
library(limma)
library(ggplot2)
library(scales)
library(matrixStats)
library(ROCR)
nGenes <- 10000                   # number of "features"
nSamples <- 6                     # number of samples (split equal in 2 groups)
pDiff <- .1                       # proportion of genes "differential"
grp <- rep(0:1, each=nSamples/2)  # dummy variable for exp. group
trueFC <- 2                       # log-fold-change of truly DE
d0 <- 1
s0 <- 0.8
sd <- s0 * sqrt(d0/rchisq(nGenes, df=d0))  # dist'n of s.d.
y <- matrix(rnorm(nGenes*nSamples, sd=sd), nr=nGenes, nc=nSamples)
indD <- 1:floor(pDiff*nGenes)
diffE <- sample(c(-1,1), max(indD), replace=TRUE) * trueFC
y[indD, grp==1] <- y[indD, grp==1] + diffE
# calculate true and observed variances
cols <- c(rep("Differential", length(indD)), rep("Non-differential", nGenes-length(indD)))
dfVars <- data.frame(varTrue=sd^2, varObs=(rowSums((y[,grp==0] - rowMeans(y[,grp==0]))^2) + rowSums((y[,grp==1] - rowMeans(y[,grp==1]))^2)) / (nSamples-2), Status=cols)
View(dfVars)
#| label: scatter-var
ggplot(dfVars, aes(x=varTrue, y=varObs, color=Status)) +
geom_point(shape=21, alpha=0.3) +
labs(x="True variance", y="Observed variance") +
scale_x_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
scale_y_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
geom_abline(slope=1, intercept=0, color="black", linewidth=0.3) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square")) +
coord_equal()
# calculate mean differences between experimental and control groups
dfVisDE <- data.frame(diff=rowMeans(y[,grp==1]) - rowMeans(y[,grp==0]), Status=cols)
#| label: diff-DE
ggplot(dfVisDE, aes(x=diff, color=Status)) +
geom_density() +
labs(x="log-fold-change b/w exp. and ctrl. groups", y="Density") +
xlim(c(-10,10)) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
(designSim <- model.matrix(~grp))
fitSim <- lmFit(y, designSim)
fitSim <- eBayes(fitSim)
dfModt <- data.frame(feature=1:length(cols), t=fitSim$t[,2], Status=cols)
#| label: mod-t
ggplot(dfModt, aes(x=feature, y=t, color=Status)) +
geom_point(shape=21, alpha=0.3) +
ylim(-10,10) +
labs(x="Features", y="Moderated t-statistic") +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
tstat <- rep(0, nGenes)
for (i in 1:nGenes) {
tstat[i] <- t.test(y[i,grp==0], y[i,grp==1], var.equal = TRUE)$statistic
}
dfStat <- data.frame(feature=1:length(cols), t=tstat, diff=fitSim$coefficients[,2], Status=cols)
#| label: tstat-diff
#| layout-ncol: 2
#| column: page
ggplot(dfStat, aes(x=feature, y=t, color=Status)) +
geom_point(shape=21, alpha=0.3) +
ylim(-10,10) +
labs(x="Features", y="Classical t-statistic") +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
ggplot(dfStat, aes(x=feature, y=diff, color=Status)) +
geom_point(shape=21, alpha=0.3) +
ylim(-10,10) +
labs(x="Features", y="log-fold-change") +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
labels <- c(abs(diffE), rep(0, nGenes-length(indD)))
# predictions are made in terms of absolute values because the ROCR package can only handle binary classification, here, between 0 (non-differential) and 2 (differential)
predCt <- prediction(abs(dfStat$t), labels)
predModt <- prediction(abs(dfModt$t), labels)
predDiff <- prediction(abs(dfStat$diff), labels)
perfCt <- performance(predCt, measure="tpr", x.measure="fpr")
perfModt <- performance(predModt, measure="tpr", x.measure="fpr")
perfDiff <- performance(predDiff, measure="tpr", x.measure="fpr")
dfPerf <- data.frame(Statistic=as.factor(rep(c("t-statistic (classical)","t-statistic (moderated)","log-fold-change"), each=length(perfCt@x.values[[1]]))), FP=c(perfCt@x.values[[1]],perfModt@x.values[[1]],perfDiff@x.values[[1]]), TP=c(perfCt@y.values[[1]],perfModt@y.values[[1]],perfDiff@y.values[[1]]))
#| label: perf
ggplot(dfPerf, aes(x=FP, y=TP, color=Statistic)) +
geom_line() +
labs(x="False positive rate", y="True positive rate") +
geom_abline(slope=1, intercept=0, color="black", lty=2, linewidth=0.3) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
library("affy")
library("preprocessCore")
unzip("affy_estrogen.zip")
ddir <- "affy_estrogen"
# preprocess affymetrix data
targets <- readTargets("targets.txt", path=ddir)
targets$time.h <- factor(targets$time.h)
targets
knitr::opts_chunk$set(echo = TRUE)
library(limma)
library(ggplot2)
library(scales)
library(matrixStats)
library(ROCR)
library(affy)
library(preprocessCore)
nGenes <- 10000                   # number of "features"
nSamples <- 6                     # number of samples (split equal in 2 groups)
pDiff <- .1                       # proportion of genes "differential"
grp <- rep(0:1, each=nSamples/2)  # dummy variable for exp. group
trueFC <- 2                       # log-fold-change of truly DE
d0 <- 1
s0 <- 0.8
sd <- s0 * sqrt(d0/rchisq(nGenes, df=d0))  # dist'n of s.d.
y <- matrix(rnorm(nGenes*nSamples, sd=sd), nr=nGenes, nc=nSamples)
indD <- 1:floor(pDiff*nGenes)
diffE <- sample(c(-1,1), max(indD), replace=TRUE) * trueFC
y[indD, grp==1] <- y[indD, grp==1] + diffE
# calculate true and observed variances
cols <- c(rep("Differential", length(indD)), rep("Non-differential", nGenes-length(indD)))
dfVars <- data.frame(varTrue=sd^2, varObs=(rowSums((y[,grp==0] - rowMeans(y[,grp==0]))^2) + rowSums((y[,grp==1] - rowMeans(y[,grp==1]))^2)) / (nSamples-2), Status=cols)
#| label: scatter-var
ggplot(dfVars, aes(x=varTrue, y=varObs, color=Status)) +
geom_point(shape=21, alpha=0.3) +
labs(x="True variance", y="Observed variance") +
scale_x_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
scale_y_continuous(expand=c(0, 0), trans=log10_trans(), breaks=trans_breaks("log10", function(x) 10^x), labels=trans_format("log10", math_format(10^.x)), limits = c(min(dfVars$varObs, dfVars$varTrue), max(dfVars$varObs, dfVars$varTrue))) +
geom_abline(slope=1, intercept=0, color="black", linewidth=0.3) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square")) +
coord_equal()
# calculate mean differences between experimental and control groups
dfVisDE <- data.frame(diff=rowMeans(y[,grp==1]) - rowMeans(y[,grp==0]), Status=cols)
#| label: diff-DE
ggplot(dfVisDE, aes(x=diff, color=Status)) +
geom_density() +
labs(x="log-fold-change b/w exp. and ctrl. groups", y="Density") +
xlim(c(-10,10)) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
(designSim <- model.matrix(~grp))
fitSim <- lmFit(y, designSim)
fitSim <- eBayes(fitSim)
dfModt <- data.frame(feature=1:length(cols), t=fitSim$t[,2], Status=cols)
#| label: mod-t
ggplot(dfModt, aes(x=feature, y=t, color=Status)) +
geom_point(shape=21, alpha=0.3) +
ylim(-10,10) +
labs(x="Features", y="Moderated t-statistic") +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
tstat <- rep(0, nGenes)
for (i in 1:nGenes) {
tstat[i] <- t.test(y[i,grp==0], y[i,grp==1], var.equal = TRUE)$statistic
}
dfStat <- data.frame(feature=1:length(cols), t=tstat, diff=fitSim$coefficients[,2], Status=cols)
#| label: tstat-diff
#| layout-ncol: 2
#| column: page
ggplot(dfStat, aes(x=feature, y=t, color=Status)) +
geom_point(shape=21, alpha=0.3) +
ylim(-10,10) +
labs(x="Features", y="Classical t-statistic") +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
ggplot(dfStat, aes(x=feature, y=diff, color=Status)) +
geom_point(shape=21, alpha=0.3) +
ylim(-10,10) +
labs(x="Features", y="log-fold-change") +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
labels <- c(abs(diffE), rep(0, nGenes-length(indD)))
# predictions are made in terms of absolute values because the ROCR package can only handle binary classification, here, between 0 (non-differential) and 2 (differential)
predCt <- prediction(abs(dfStat$t), labels)
predModt <- prediction(abs(dfModt$t), labels)
predDiff <- prediction(abs(dfStat$diff), labels)
perfCt <- performance(predCt, measure="tpr", x.measure="fpr")
perfModt <- performance(predModt, measure="tpr", x.measure="fpr")
perfDiff <- performance(predDiff, measure="tpr", x.measure="fpr")
dfPerf <- data.frame(Statistic=as.factor(rep(c("t-statistic (classical)","t-statistic (moderated)","log-fold-change"), each=length(perfCt@x.values[[1]]))), FP=c(perfCt@x.values[[1]],perfModt@x.values[[1]],perfDiff@x.values[[1]]), TP=c(perfCt@y.values[[1]],perfModt@y.values[[1]],perfDiff@y.values[[1]]))
#| label: perf
ggplot(dfPerf, aes(x=FP, y=TP, color=Statistic)) +
geom_line() +
labs(x="False positive rate", y="True positive rate") +
geom_abline(slope=1, intercept=0, color="black", lty=2, linewidth=0.3) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
unzip("affy_estrogen.zip")
ddir <- "affy_estrogen"
# preprocess affymetrix data
targets <- readTargets("targets.txt", path=ddir)
targets$time.h <- factor(targets$time.h)
targets
abatch <- ReadAffy(filenames=targets$filename, celfile.path=ddir)
eset <- rma(abatch)  # bg correct, normalize, summarize
mds <- plotMDS(exprs(eset), plot=FALSE)  # MDS plot
dfMDS <- data.frame(MDS1=mds$x, MDS2=mds$y, treatment=targets$estrogen, time.h=targets$time.h)
#| label: mds
ggplot(dfMDS, aes(x=MDS1, y=MDS2, shape=treatment, color=time.h)) +
geom_point(size = 3) +
xlim(c(-1.2,1.2)) +
ylim(c(-1.2,1.2)) +
theme_bw() +
theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))
# do the limma modeling
f <- paste0(targets$estrogen, targets$time.h)
f <- factor(f)
# create design matrix
designAffy <- model.matrix(~0+f)
colnames(designAffy) <- levels(f)
designAffy
fitAffy <- lmFit(eset, designAffy)
cont.matrix <- makeContrasts(E10="present10-absent10", E48="present48-absent48", Time="absent48-absent10", levels=designAffy)
cont.matrix
fitAffy2  <- contrasts.fit(fitAffy, cont.matrix)
fitAffy2  <- eBayes(fitAffy2)
statsAffy10h <- topTable(fitAffy2, coef=1, n=nrow(exprs(eset)))
statsAffy48h <- topTable(fitAffy2, coef=2, n=nrow(exprs(eset)))
dfAffy <- data.frame(matrix(0, nr=nrow(exprs(eset)), nc=3))
dfAffy[,1] <- rowMeans(exprs(eset)[,as.numeric(designAffy[,3])==1]) - rowMeans(exprs(eset)[,as.numeric(designAffy[,1])==1])
dfAffy[,2] <- rowMeans(exprs(eset)[,as.numeric(designAffy[,4])==1]) - rowMeans(exprs(eset)[,as.numeric(designAffy[,2])==1])
dfAffy[,3] <- rowMeans(exprs(eset))
rownames(dfAffy) <- rownames(exprs(eset))
colnames(dfAffy) = c("logFC-10h", "logFC-48h", "AveExpr")
print("Results from linear model:")
statsAffy10h[which.max(statsAffy10h$logFC),]
statsAffy48h[which.max(statsAffy48h$logFC),]
print("Result from manual calculation:")
dfAffy[which.max(dfAffy$`logFC-10h`),]
