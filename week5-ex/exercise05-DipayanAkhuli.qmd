---
title: "Exercise 05"
author: "Dipayan Akhuli (dipayan-akhuli)"
date: today
format: 
    html:
      toc: true
      self-contained: true
      highlight-style: github
      code-line-numbers: true
editor_options: 
    chunk_output_type: console
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Mapping in practice

### bowtie2

[Scoring alignments:]{.underline} bowtie2 performs two kinds of alignments - end-to-end (by default) and local alignment. The former aligns all the characters in the read to the reference sequence, while the latter only aligns those characters in the read to the reference which maximize the score of a given possible alignment, thereby skipping characters at the start or end of the read if they would result in base mismatch or gaps. In either case, the alignment score is calculated as follows:

-   Each base mismatch at a high quality position is penalized -6.
-   Each gap opening is penalized -5.
-   Each gap extension (including first base in gap) is penalized -3.
-   Additionally, for local alignments, each base in the read which matches the reference contributes a +2 bonus.

Thus, the maximum possible score for end-to-end alignments is 0, while it is equal to the length of the read multiplied by the match bonus for local alignments.

[Reporting options:]{.underline} bowtie2 has 3 reporting options after aligning a read with a reference sequence:

1.  Default mode: Upon finding one alignment, it keeps searching for other valid alignments which are almost as good or better than the first alignment, and after reaching a search limit, reports the best alignment that it encountered (which might not be the best possible alignment globally).

2.  -k mode: In this mode, it searches for a maximum of N (specified parameter) distinct, valid alignments, and then reports all the alignments it found, sorted in descending order of alignment scores. Again, as in the previous mode, it is not guaranteed that the best possible alignment will be reported if the total number of distinct, valid alignments that are possible exceeds N.

3.  -a mode: In this mode, it searches for all possible distinct, valid alignments, and reports them all in descending order of alignment scores. Thus, only in this mode is it guaranteed that the best possible score will be reported.

### STAR

[Scoring alignments:]{.underline} STAR calculates alignment scores as follows:

-   Each base match contributes a +1 score.
-   Each base mismatch is penalized -1.
-   Each gap opening (due to insertion/deletion) is penalized -2.
-   Each gap extension (due to insertion/deletion, including first base in gap) is penalized -2.
-   For RNA splice junctions, each GC/AG or CT/GC junction is penalized -4, while each AT/AC or GT/AT or non-canonical junction is penalized -8.
-   Additionally, a penalty equal to -0.25 times log2(genomic length of alignment) is applied to each alignment.

[Reporting options:]{.underline} STAR searches for M (default 50) alignments using the multimapper, and reports a maximum of N (default 10, has to be set not more than M) alignments per read. The primary alignment is the one with the best score and is reported first, followed by other alignments in random order. If the number of alignments found for a read exceeds N, the read is considered unmapped since it maps to too many locations. There are also options to report a single unique alignment using the unique mapper, or report all alignments found by the multimapper.

## Load packages

```{r }
BiocManager::install("Rsubread", update=FALSE)
BiocManager::install("BSgenome.Scerevisiae.UCSC.sacCer3", update=FALSE)
library("BSgenome")
library("BSgenome.Scerevisiae.UCSC.sacCer3")
library("Rsubread")
library(tidyr)
library(ggplot2)
```

## Download read file

```{r }
setwd("/Users/dipayan/Documents/GitHub/sta426-exercises/week5-ex")
download.file("http://fgcz-gstore.uzh.ch/public/Yeast_Reads/20170313.A-G1_R1-sub.fastq.gz", "G1_R1-sub.fastq.gz")
```

## Write genome on local disk as fasta file

```{r }
genome <- BSgenome.Scerevisiae.UCSC.sacCer3
export(genome, "./SacCer3.fasta")
```

## Build index

```{r }
buildindex(basename="./SacCer3_reference_index", reference="./SacCer3.fasta", indexSplit=TRUE, memory=2000)
```

## Align reads to reference (no end trimming)

```{r }
align(index="./SacCer3_reference_index", readfile1="./G1_R1-sub.fastq.gz", output_file="./G1_R1-sub_Rsubread_alignment_trim0.BAM", nthreads=4)
```

## Align reads to reference (trimming 5 bases off both ends)

```{r }
align(index="./SacCer3_reference_index", readfile1="./G1_R1-sub.fastq.gz", output_file="./G1_R1-sub_Rsubread_alignment_trim5.BAM", nthreads=4, nTrim5=5, nTrim3=5)
```

## Compare fraction of reads aligned with and without end trimming

```{r }
trim0Stats <- read.delim("./G1_R1-sub_Rsubread_alignment_trim0.BAM.summary", header=FALSE, sep="\t")
trim5Stats <- read.delim("./G1_R1-sub_Rsubread_alignment_trim5.BAM.summary", header=FALSE, sep="\t")
alignStats <- data.frame(c("Trim 0 bases", "Trim 5 bases"), t(cbind(trim0Stats[,2], trim5Stats[,2])))
colnames(alignStats) <- c("Case", trim0Stats[,1])
alignStats <- cbind(alignStats, Unique=100*alignStats$Uniquely_mapped_reads/alignStats$Total_reads, Multi=100*alignStats$Multi_mapping_reads/alignStats$Total_reads)

#| label: frac-reads
ggplot(alignStats %>% gather(Category, Fraction, Unique:Multi), aes(x=Case, y=Fraction, fill=Category)) + 
  geom_col() +
  geom_text(aes(label=round(Fraction,2)), size=3, position=position_stack(vjust=0.5)) +
  labs(x="", y="Percentage of reads aligned (%)") +
  ylim(c(0,100)) +
  theme_bw() +
  theme(axis.title.x=element_text(vjust=-1), axis.title.y=element_text(vjust=+3), panel.border=element_blank(), axis.line=element_line(color="black", linewidth=0.5, lineend="square"))

```

We see that the fraction of reads aligned increases very slightly for both unique and multi-mappers upon trimming 5 bases off both ends of the reads. This could be because some of the bases which were called wrongly at the ends of the reads (due to lower quality scores) were removed from the reads, allowing better alignment with the reference genome.

..
